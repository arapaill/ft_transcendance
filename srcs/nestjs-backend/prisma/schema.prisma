generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
  output        = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String?  @unique
  Full_Name    String?  @unique
  two_factor   Boolean?
  avatar       String?
  line_status  String?
  wins         Int?
  losses       Int?
  ladder_level Int?
  achievements String?
  secret       String?

  email  String?
  qrCode String?

  friends    String[]
  demFriends String[]

  Description   String?
  MatchsHistory String[]
  Date          DateTime @default(now())
  match         Boolean? @default(false)
  toUse         String?
  toUses        String[]

  friendsList   Int[]
  blockList     Int[]

  @@map("users")
}

model ongoingGame {
  id              Int     @id @default(autoincrement())
  JOUEUR_1_SOCKET String?
  JOUEUR_1_PSEUDO String?
  JOUEUR_2_SOCKET String?
  JOUEUR_2_PSEUDO String?
}

model gameHistory {
  id             Int     @id @default(autoincrement())
  JOUEUR_1       String?
  JOUEUR_2       String?
  VAINQUEUR      String?
  SCORE_JOUEUR_1 String?
  SCORE_JOUEUR_2 String?
}

model chatMessage {
  id            Int          @id @default(autoincrement())
  userID        Int
  userPseudo    String
  userAvatar    String
  text          String
  date          DateTime     @default(now())
  channelName   String
  chatChannel   chatChannel? @relation(fields: [chatChannelId], references: [id])
  chatChannelId Int?
}

model chatChannel {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  owner         String
  admins        String[]
  users         String[]
  type          String
  password      String?
  messages      chatMessage[]
  usersBanned   Int[]
  usersKicked   Int[]
  usersMuted    Int[]
}

model userChannels {
  id           Int     @id @default(autoincrement())
  userID       Int     @unique
  channelsID   Int[]
}